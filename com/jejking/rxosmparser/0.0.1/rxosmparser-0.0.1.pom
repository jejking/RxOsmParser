<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.jejking</groupId>
	<artifactId>rxosmparser</artifactId>
	<version>0.0.1</version>
	<packaging>jar</packaging>

	<name>Rx Osm Parser</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
	    <!-- github server corresponds to entry in ~/.m2/settings.xml
	    <settings>
  			<servers>
    			<server>
      				<id>github</id>
      				<username>YOUR-GITHUB-USERNAME</username>
      				<password>YOUR-GITHUB-PASSWORD</password>
    			</server>
  			</servers>
		</settings>
	     -->
	    <github.global.server>github</github.global.server>
	</properties>

	<scm>
		<developerConnection>scm:git:https://github.com/jejking/RxOsmParser.git</developerConnection>
     <tag>rxosmparser-0.0.1</tag>
  </scm>

	<dependencies>
		<dependency>
			<groupId>com.vividsolutions</groupId>
			<artifactId>jts</artifactId>
			<version>1.13</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.3</version>
		</dependency>
        <dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>17.0</version>
		</dependency>
        <dependency>
			<groupId>com.netflix.rxjava</groupId>
			<artifactId>rxjava-core</artifactId>
			<version>0.19.6</version>
		</dependency>
        <dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.8</version>
		</dependency>        
        <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		
	</dependencies>

	<build>
	<!-- ..
	 <plugins>
	    <plugin>
	        <artifactId>maven-deploy-plugin</artifactId>
	        <version>2.8.1</version>
	        <configuration>
	               <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
	        </configuration>
	    </plugin>
	 </plugins>
	 -->
    <plugins>
        <plugin>
            <groupId>com.github.github</groupId>
            <artifactId>site-maven-plugin</artifactId>
            <version>0.9</version>
            <configuration>
                <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
                <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
                <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
                <branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
                <includes><include>**/*</include></includes>
                <repositoryName>RxOsmParser</repositoryName>      <!-- github repo name -->
                <repositoryOwner>jejking</repositoryOwner>    <!-- github username  -->
            </configuration>
            <executions>
              <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
              <execution>
                <goals>
                  <goal>site</goal>
                </goals>
                <phase>deploy</phase>
              </execution>
            </executions>
        </plugin>
        <plugin>
	        <artifactId>maven-deploy-plugin</artifactId>
	        <version>2.8.1</version>
	        <configuration>
	               <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
	        </configuration>
	    </plugin>
    </plugins>

	</build>


	<distributionManagement>
    	<repository>
	        <id>internal.repo</id>
	        <name>Temporary Staging Repository</name>
	        <url>file://${project.build.directory}/mvn-repo</url>
	    	</repository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net repository</name>
			<url>http://download.java.net/maven/2</url>
		</repository>
		<repository>
			<id>osgeo</id>
			<name>Open Source Geospatial Foundation Repository</name>
			<url>http://download.osgeo.org/webdav/geotools/</url>
		</repository>
		<repository>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>opengeo</id>
			<name>OpenGeo Maven Repository</name>
			<url>http://repo.opengeo.org</url>
		</repository>
	</repositories>
</project>
